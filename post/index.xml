<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on My New Hugo Site</title>
    <link>http://KuangDangLi.github.io/post/</link>
    <description>Recent content in Posts on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 26 Mar 2022 22:18:33 +0800</lastBuildDate><atom:link href="http://KuangDangLi.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>JavaScript的诞生</title>
      <link>http://KuangDangLi.github.io/post/javascript%E7%9A%84%E8%AF%9E%E7%94%9F/</link>
      <pubDate>Sat, 26 Mar 2022 22:18:33 +0800</pubDate>
      
      <guid>http://KuangDangLi.github.io/post/javascript%E7%9A%84%E8%AF%9E%E7%94%9F/</guid>
      <description>JavaScript的诞生  Javascript诞生于网景(Netscape)公司。这家公司在1994年发布了网景浏览器，这是历史上第一个比较成熟的网络浏览器，占据了当时互联网市场的多数份额。诞生之初的网景浏览器与大多数普通的浏览器一样都只支持对网页的简单浏览，为了增强页面的动态性以及与用户的互动，网景公司决定开发一种网页脚本语言。与此同时，网景与Java的开发商昇阳Sun组成了开发联盟，并已经使网景浏览器支持Java，这深深地影响了新语言的开发方向。 1995年4月，网景招募了主要方向为函数式编程语言的布兰登・艾克进入公司负责新语言的开发，初始方向是把Scheme语言嵌入进网景浏览器中。但由于昇阳的影响，公司高层间在新语言的开发方向上产生了分歧。当时面向对象编程的Java正是互联网新星，为了乘上这股东风，网景公司最终决定开发一种与Java语言特点相仿但是更加易上手的脚本语言。对Java全无兴趣的布兰登为了应付公司的任务，在1995年5月仅仅耗费10天就把新语言的原型设计了出来。新语言最初的名字是Mocha，后改为LiveScript，最后定名为JavaScript。在布兰登本人的技术背景与公司决策的影响下，JavaScript混合了两种编程语言风格&amp;mdash;-（简化的）函数式编程 +（简化的）面向对象编程。 在JavaScript问世后，为了抢夺浏览器市场，微软对网景浏览器的解释器进行了逆向工程，为自家的IE浏览器创建了JScript。在两家公司的竞争下，由于网页脚本语言没有同意的标准规范，开发者开发的网页很难同时完美兼容两家浏览器。1996年11月，网景向ECMA提交语言标准。1997年6月，ECMA以JavaScript语言为基础制定了ECMAScript标准规范ECMA-262。JavaScript成为了ECMAScript 最著名的实现之一 。  </description>
    </item>
    
    <item>
      <title>Url</title>
      <link>http://KuangDangLi.github.io/post/url/</link>
      <pubDate>Thu, 24 Mar 2022 18:16:41 +0800</pubDate>
      
      <guid>http://KuangDangLi.github.io/post/url/</guid>
      <description>浅析URL  URL 包含哪几部分，每部分分别有什么作用？   以https://ww.baidu.com/s?wd=hello&amp;amp;rsv_spt=1#5为例。https是协议名称，规定以https协议来进行交流传输信息；www.baidu.com是域名，是由一串用点分隔的字符组成的互联网上某一台计算机或计算机组的名称，用于在数据传输时标识计算机的电子方位。域名可以说是一个 IP 地址的代称，目的是为了便于记忆后者；/s是为路径，用来查找服务器上对应文件；wd=hello&amp;amp;rsv_spt=1是查询参数，用来查找对应内容；#5是锚点，用来定位到页面中特点位置，锚点不会传输给服务器，由浏览器来读。  DNS 的作用是什么，nslookup 命令怎么用？   DNS，即为域名系统，用来将域名与IP对应，提供将域名解析为IP的服务。 在命令行软件中输入 nslookup 要查找的域名，程序返回的信息中出现的Addresses行则为查找域名对应的IP。  IP 的作用是什么，ping 命令怎么用？   IP，即为Internet Protocol，及因特网协议，其具体作用是定位发送或接收数据报的设备设备，以及规定如何封装数据报文以跟其他设备交流。 在命令行软件中输入 ping 要查找的IP，程序会返回按时间和成功响应的次数估算丢失数据包率（丢包率）和数据包往返时间（网络时延）。  域名是什么，分别哪几类域名？   域名是由一串用点分隔的字符组成的互联网上某一台计算机或计算机组的名称，用于在数据传输时标识计算机的电子方位。域名可以说是一个 IP 地址的代称，目的是为了便于记忆后者。 域名分为顶级域和子域名。顶级域包括国家及地区双字代码顶级域（国家和地区顶级域）和通用顶级域（一组名称和多个组织）。子域名分为二级域名和三级域名。举例，在usersname.github.io中，github为二级域名，usersname则为三级域名。  </description>
    </item>
    
    <item>
      <title>CSS Sumary</title>
      <link>http://KuangDangLi.github.io/post/css-sumary/</link>
      <pubDate>Thu, 24 Mar 2022 14:33:51 +0800</pubDate>
      
      <guid>http://KuangDangLi.github.io/post/css-sumary/</guid>
      <description>CSS知识总结 CSS简介  CSS，全称Cascading Style Sheets，中文名层叠样式表，是一种用来为结构化文档（如 HTML 文档或 XML 应用）添加样式（字体、间距和颜色等）的 计算机语言，由 W3C 定义和维护。由哈肯・维姆・莱首先提出，初始版本于1996年12月17日发行。  基本概念  块   CSS通过display属性可以将元素设置为块级元素、内联元素、内联块元素。一个块级元素的内容宽度是其父元素的100%，其高度与其内容高度一致。内联元素的 height width 与内容一致。无法设置内联元素的 height width。inline-block 混合了 inline 和 block 的特性。  盒模型   CSS盒由content、padding、border、margin组成。 CSS盒模型分为content-box和border-box两种。content-box内容盒中内容的宽度和边界就是盒子的宽度和边界。border-box的边界是border，其宽度为content+padding+border。  文档流   元素布局默认为从左到右、从上到下。内联元素和内联块元素占满一行再换行，不同的是内联元素在换行时会折叠内容到下一行，内联块元素不会，容不下的元素会直接另起一行。块级元素独占一行，从上到下布局。  外边距合并   两个外边距相接的父子元素、兄弟元素，这些外边距将合并为一个外边距，即最大的单个外边距的大小。 父子元素外边距合并可以通过设置padding/border、overflow:hidden、display:flex挡住。兄弟元素外边距合并可以通过设置inline-block消除。  CSS布局   CSS布局有float布局、flex布局、grid布局三种主流形式。 CSS布局有两种思路。可以先定下大局，然后再完善每个部分的小布局。也可以从小到大，先完成小布局，然后组成大布局。  层叠上下文   层叠上下文是对二维平面中的HTML元素的三维构想，通过在一条虚构的Z轴中的顺序来决定渲染优先级。 在单个的层叠上下文中，各元素属性的顺序有上到下分别是z-index值为非负数的定位元素、内联子元素、浮动元素、块级子元素、border、background、z-index值为负数的定位元素。 创建层叠上下文的元素详见MDN层叠上下文。 层叠上下文可以包含在其他层叠上下文中，并且一起创建一个层叠上下文的层级。每个层叠上下文都完全独立于它的兄弟元素：当处理层叠时只考虑子元素。每个层叠上下文都是自包含的：当一个元素的内容发生层叠后，该元素将被作为整体在父级层叠上下文中按顺序进行层叠。  浏览器渲染原理   浏览器渲染步骤：根据HTML构建HTML树，根据CSS构建CSS树，将两棵树合并成渲染树，再进行布局绘制以及合成，最终渲染出用户看到的画面。  CSS动画   通过transform和transition两个属性来写动画。transform负责图形的位置移动、大小形状变化，transition负责插入中间帧补充移动、形变过程使动画变得流畅。 通过animation和@keyframes来写动画。@keyframes可以定义动画移动、形变的具体值以及定义其所在的关键帧。animation属性负责动画进行的时长、过渡方式、延迟等，完善动画表现。  </description>
    </item>
    
    <item>
      <title>Commonly Used Tags</title>
      <link>http://KuangDangLi.github.io/post/commonly-used-tags/</link>
      <pubDate>Tue, 15 Mar 2022 16:20:29 +0800</pubDate>
      
      <guid>http://KuangDangLi.github.io/post/commonly-used-tags/</guid>
      <description>HTML常用标签 a标签的用法  属性：  href 指向链接。其可用取值有：网址、路径、伪协议、ID。 target 决定打开新页面的方式。其可用取值有：_self、_blank、_parent、_top、以及自命名窗口。 download 下载页面。 rel=noopener 与js相关，略。   用法：  跳转外部页面。 跳转内部锚地。 跳转到邮箱或电话等 。    img标签的用法  作用：  发出get请求，展示一张图片。   属性  src 图片路径 alt 对图片的文本描述。鼠标悬浮在图片上或图片访问失败时显示。 width/height 宽高，编辑其中一项时，另一项自适应，同时定义宽高的值但是不符合图片原本宽高比例时图片变形。   事件  onload 当成功打开时，执行自定义操作。 onerror 打开失败时，执行自定义操作。   响应式  max-width:100% 宽度自适应浏览器。   可替换元素 略。  table标签的用法  相关的标签  table thead tbody tfoot tr td th   相关的样式  table-layout 定义了用于布局表格单元格，行和列的算法。其可用取值有:auto、fixed。 border-collapse 表格边框是否合并。其可用取值有:collapse、seprate。 border-spacing 指定相邻单元格边框之间的距离。    感想 这章内容好多好杂听着好晕。然后在写这篇博客的时候，刚开始忘了hugo的new命令，touch了一个新md，导致最后本地预览不了，推上GitHub后也死活看不着。翻了一个多小时才意识到是新建文章第一步就出了问题（还有front matter里的draft值）。建站第一篇文章推上github的时候也因为仓库名的问题搞了好久。出现的这俩问题以及浪费的时间教会了我，想当程序员首先要学会细心地抄，抄都抄不对的时候感觉自己是个噼里啪啦kilakila究极无敌世无第二大傻逼。</description>
    </item>
    
  </channel>
</rss>
